---
// Algorithm.astro - Overview of the DISC dynamic decomposition workflow
const workflowSteps = [
  {
    title: 'Identify pivotal prefixes',
    description:
      'DISC samples continuations from the current prefix and scores them with an outcome reward model to locate promising solution regions.'
  },
  {
    title: 'Adapt step granularity',
    description:
      'Difficult prefixes trigger finer-grained decomposition, while easier prefixes advance in larger chunks to conserve budget.'
  },
  {
    title: 'Allocate compute where it matters',
    description:
      'Sampling focuses on high-importance tokens, driving additional rollouts only when they improve the z-score over existing prefixes.'
  },
  {
    title: 'Plug into search',
    description:
      'The same decomposition policy controls node expansion for greedy, beam, or MCTS search, making DISC a drop-in upgrade.'
  }
];

const highlights = [
  {
    label: 'Adaptive recursion',
    text: 'Advance or contract step sizes on the fly until the reward landscape stops improving.'
  },
  {
    label: 'Minimal assumptions',
    text: 'Requires only an outcome reward model — unit tests, verifiers, or self-critique signals all qualify.'
  },
  {
    label: 'Provable convergence',
    text: 'Under mild support assumptions on the base policy, DISC monotonically improves the best solution prefix.'
  } 
];
---
<section id="workflow" class="content-section alt-background">
  <div class="section-container">
    <h2 class="section-title">How Dynamic Decomposition Works</h2>
    <p class="section-description">
      DISC is a recursive inference procedure. It repeatedly proposes candidate prefixes, compares their rewards,
      and dynamically decides whether to advance or contract the step size. The result is a search process that
      focuses on the most uncertain parts of the trajectory while skipping past the easy ones.
    </p>

    <div class="decomposition-card" aria-labelledby="decomposition-title">
      <div class="decomposition-title" id="decomposition-title">\decomp example decomposition</div>
      <div class="decomposition-body">
        <p>
          <span class="tone-high">[ Let the length of the rectangle be <span class="math-symbol">l</span> ]</span>
          <span class="tone-medium">
            [ and the width of the rectangle be <span class="math-symbol">w</span>. Since the perimeter of the rectangle is 24 inches,
            we have that <span class="math-symbol">2l + 2w = 24</span>, so <span class="math-symbol">l + w = 12</span>. We wish to maximize the area of the
            rectangle, ]
          </span>
          <span class="tone-high">[ which ]</span>
        </p>
        <p class="tone-low">[ is <span class="math-symbol">A = lw</span>. Let <span class="math-symbol">l = 12 - w</span> and plug into the area: ]</p>
        <div class="math-line tone-low">
          <span class="math-symbol">A = (12 - w)w ⇒ A = 12w - w<sup>2</sup></span>
        </div>
        <p class="tone-low">Now, we differentiate <span class="math-symbol">A</span> with respect to <span class="math-symbol">w</span>:</p>
        <div class="math-line tone-low">
          <span class="math-symbol">A'(w) = 12 - 2w</span>
        </div>
        <p class="tone-low">We wish to maximize <span class="math-symbol">A</span>, so we set <span class="math-symbol">A'(w) = 0</span>, and solve for <span class="math-symbol">w</span>:</p>
        <div class="math-line tone-low">
          <span class="math-symbol">12 - 2w = 0 ⇒ w = 6</span>
        </div>
        <p class="tone-low">
          Since <span class="math-symbol">l = 12 - w</span>, we have that <span class="math-symbol">l = 12 - 6 = 6</span>. Therefore, the area of the rectangle is
          <span class="math-symbol">A = lw = 6 · 6 = </span><span class="final-answer">36</span>.
        </p>
      </div>
    </div>

    <div class="workflow-grid">
      {workflowSteps.map((step) => (
        <article class="workflow-card">
          <h3>{step.title}</h3>
          <p>{step.description}</p>
        </article>
      ))}
    </div>

    <div class="method-diagrams">
      <figure class="method-figure square">
        <img
          src="/diagrams/method_simplified.svg"
          alt="Simplified overview of DISC adaptive decomposition"
          loading="lazy"
        />
        <figcaption class="method-caption">
          Square format highlight emphasising the contract-versus-advance control loop.
        </figcaption>
      </figure>
      <figure class="method-figure wide">
        <img
          src="/diagrams/method_detailed.svg"
          alt="Detailed DISC rollout schedule with reward tracking"
          loading="lazy"
        />
        <figcaption class="method-caption">
          Landscape layout digs into prefix scoring, branching probabilities, and z-score tracking through the search.
        </figcaption>
      </figure>
    </div>

    <div class="highlight-banner">
      {highlights.map((item) => (
        <div class="highlight-item">
          <h4>{item.label}</h4>
          <p>{item.text}</p>
        </div>
      ))}
    </div>
  </div>
</section>

<style>
  #workflow .section-description {
    max-width: 780px;
    margin: 0 auto 2.5rem auto;
    font-size: 1.1rem;
    color: #3f4455;
  }

  .decomposition-card {
    background: #ffffff;
    border-left: 6px solid #2a2f6c;
    border-radius: 18px;
    box-shadow: 0 12px 32px rgba(42, 47, 108, 0.12);
    padding: 1.75rem 2rem;
    margin: 0 auto 3rem auto;
    max-width: 820px;
  }

  .decomposition-title {
    font-weight: 700;
    color: #2a2f6c;
    font-size: 1.15rem;
    margin-bottom: 1rem;
  }

  .decomposition-body {
    display: grid;
    gap: 0.9rem;
    color: #3f4455;
  }

  .decomposition-body p {
    margin: 0;
    line-height: 1.6;
  }

  .math-line {
    background: rgba(42, 47, 108, 0.05);
    border-radius: 10px;
    padding: 0.6rem 0.9rem;
    font-family: 'JetBrains Mono', 'Fira Code', Menlo, Monaco, Consolas, 'Liberation Mono', 'Courier New', monospace;
  }

  .tone-high {
    color: #2a2f6c;
    font-weight: 600;
  }

  .tone-medium {
    color: #50578c;
  }

  .tone-low {
    color: #3f4455;
  }

  .math-symbol {
    font-style: italic;
  }

  .final-answer {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    padding: 0.1rem 0.5rem;
    border-radius: 6px;
    background: rgba(42, 47, 108, 0.12);
    font-weight: 700;
    color: #2a2f6c;
  }

  .workflow-grid {
    display: grid;
    grid-template-columns: repeat(2, minmax(0, 1fr));
    gap: 1.75rem;
  }

  .workflow-card {
    background: white;
    border-radius: 16px;
    padding: 1.75rem;
    box-shadow: 0 12px 32px rgba(42, 47, 108, 0.12);
  }

  .workflow-card h3 {
    margin-top: 0;
    color: #2a2f6c;
    font-size: 1.25rem;
    margin-bottom: 0.75rem;
  }

  .workflow-card p {
    margin: 0;
    color: #4a4d57;
    line-height: 1.7;
  }

  .highlight-banner {
    margin-top: 3rem;
    display: grid;
    grid-template-columns: repeat(3, minmax(0, 1fr));
    gap: 1.5rem;
  }

  .method-diagrams {
    margin-top: 3rem;
    display: grid;
    gap: 2rem;
  }

  .method-figure {
    background: white;
    border-radius: 16px;
    box-shadow: 0 12px 32px rgba(42, 47, 108, 0.12);
    padding: 1.5rem;
    text-align: center;
  }

  .method-figure img {
    width: 100%;
    height: auto;
    display: block;
  }

  .method-figure.square img {
    max-width: 280px; /* half the detailed diagram width */
    margin: 0 auto;
  }

  .method-figure.wide img {
    max-width: 560px; /* suits 396px-wide viewBox without stretching */
    margin: 0 auto;
  }

  .method-caption {
    margin-top: 1rem;
    color: #4a4d57;
    font-size: 0.95rem;
    line-height: 1.6;
  }

  .highlight-item {
    background: #2a2f6c;
    color: white;
    border-radius: 14px;
    padding: 1.5rem;
  }

  .highlight-item h4 {
    margin: 0 0 0.75rem 0;
    font-size: 1.1rem;
  }

  .highlight-item p {
    margin: 0;
    line-height: 1.6;
    color: rgba(255, 255, 255, 0.85);
  }

  @media (max-width: 900px) {
    .workflow-grid {
      grid-template-columns: repeat(1, minmax(0, 1fr));
    }

    .decomposition-card {
      padding: 1.5rem;
      margin-bottom: 2.5rem;
    }

    .highlight-banner {
      grid-template-columns: repeat(1, minmax(0, 1fr));
    }

    .method-diagrams {
      margin-top: 2.5rem;
    }
  }

  @media (min-width: 1024px) {
    .method-diagrams {
      grid-template-columns: 320px 1fr;
      align-items: start;
    }
  }
</style>
