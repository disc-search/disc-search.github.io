---
// Results.astro - Benchmark outcomes and ablations for DISC
const benchmarkCards = [
  {
    dataset: 'APPS (competition)',
    metric: 'pass@10 error ↓',
    detail: 'Down from 0.50 to 0.475 with a fixed 1.5k token budget.',
    highlight: '5.0% relative reduction versus the strongest static decomposition.'
  },
  {
    dataset: 'MATH500',
    metric: 'pass@10 error ↓',
    detail: 'Drops from 0.15 to 0.14 using a verifier-trained outcome reward model.',
    highlight: '6.7% relative reduction with fewer sampled continuations.'
  },
  {
    dataset: 'LiveCodeBench',
    metric: 'pass@10 error ↓',
    detail: 'Falls from 0.57 to 0.51 despite strict sandboxed unit tests.',
    highlight: '10.5% relative reduction on freshly collected problems.'
  }
];

const generalityCards = [
  {
    title: 'Open-source LLMs',
    text: 'LLaMA-3.1-8B accuracy rises from 0.01 to 0.04; Mistral jumps from 0.0 to 0.02; Qwen climbs from 0.095 to 0.17.'
  },
  {
    title: 'Reasoning specialists',
    text: 'Applied to proprietary R1 models, DISC delivers an 85% relative gain with only ten samples per query.'
  },
  {
    title: 'Search integration',
    text: 'Beam search and MCTS inherit the same adaptive step policy, pruning low-reward prefixes early to save calls.'
  }
];
---
<section id="results" class="content-section alt-background">
  <div class="section-container">
    <h2 class="section-title">Benchmark Results</h2>
    <p class="section-description">
      DISC reallocates inference budget toward the most uncertain prefixes, consistently outperforming static token,
      sentence, and single-step decomposition strategies across coding and mathematics benchmarks.
    </p>

    <div class="benchmark-grid">
      {benchmarkCards.map((card) => (
        <article class="benchmark-card">
          <header>
            <h3>{card.dataset}</h3>
            <p class="metric">{card.metric}</p>
          </header>
          <p>{card.detail}</p>
          <p class="highlight">{card.highlight}</p>
        </article>
      ))}
    </div>

    <div class="generality-grid">
      {generalityCards.map((card) => (
        <article class="generality-card">
          <h3>{card.title}</h3>
          <p>{card.text}</p>
        </article>
      ))}
    </div>
  </div>
</section>

<style>
  #results .section-description {
    max-width: 760px;
    margin: 0 auto 2.5rem auto;
    color: #3f4455;
  }

  .benchmark-grid {
    display: grid;
    grid-template-columns: repeat(3, minmax(0, 1fr));
    gap: 1.5rem;
    margin-bottom: 3rem;
  }

  .benchmark-card {
    background: white;
    border-radius: 16px;
    padding: 1.75rem;
    box-shadow: 0 10px 28px rgba(42, 47, 108, 0.12);
    display: flex;
    flex-direction: column;
    gap: 0.9rem;
  }

  .benchmark-card header h3 {
    margin: 0;
    color: #2a2f6c;
    font-size: 1.25rem;
  }

  .metric {
    margin: 0.25rem 0 0 0;
    color: #647099;
    font-weight: 600;
    font-size: 0.95rem;
  }

  .benchmark-card p {
    margin: 0;
    color: #485065;
    line-height: 1.6;
  }

  .benchmark-card .highlight {
    font-weight: 600;
    color: #1f2752;
  }

  .generality-grid {
    display: grid;
    grid-template-columns: repeat(3, minmax(0, 1fr));
    gap: 1.5rem;
  }

  .generality-card {
    background: #f1f3f9;
    border-radius: 14px;
    padding: 1.6rem;
  }

  .generality-card h3 {
    margin-top: 0;
    color: #2a2f6c;
    font-size: 1.15rem;
  }

  .generality-card p {
    margin: 0;
    color: #485065;
    line-height: 1.6;
  }

  @media (max-width: 900px) {
    .benchmark-grid,
    .generality-grid {
      grid-template-columns: repeat(1, minmax(0, 1fr));
    }
  }
</style>
